
1.Get alternative number from a number: Test
Input: 1234567
Output: 246

*****
    public static void main(String args[]){
        int base=14235478;
        int[] holder= new int[Integer.toString(base).length()];
        int i=0;
        //int count=1;
        while(base>0){
            int rem = base%10;
            int newBase = base/10;
            base=newBase;
            holder[i++]=rem;
        }
        System.out.print(holder);
        int count=1;
        int k=0;
        int[] finalArr= new int[10];
        for(int j=holder.length-1;j>=0;j--){
            if (count%2==0)
                finalArr[k++]=holder[j];
            count++;
        }
        System.out.print(finalArr);

    }
*******    
*******    *******    *******    *******    *******    *******    *******    *******    *******    
Get largest element from arranging with 5 in between integers
  public static void main(String args[]) {
        int base = 670;
//outcomes  - 5268,2568,2658,2685
// 670      - 5670,6570,6750,6705
        String numSt = "";
        int SIZE = 0;
        while (base > 0) {
            numSt = numSt + base % 10;
            base = base / 10;
            ++SIZE;
        }

        int MAX_VALUE = 0;
        int POINT = numSt.length() - 1;
        int POSSIBILITIES = SIZE + 1;
        String NEW_VALUE = "";
        while (POSSIBILITIES > 0) {
            for (int i = numSt.length() - 1; i >= 0; i--) {
                if (i == POINT)
                    NEW_VALUE = NEW_VALUE + "5";
                NEW_VALUE = NEW_VALUE + numSt.charAt(i);
            }
            if (Integer.parseInt(NEW_VALUE) > MAX_VALUE)
                MAX_VALUE = Integer.parseInt(NEW_VALUE);
            POSSIBILITIES--;
            NEW_VALUE = "";
            POINT--;
        }
        System.out.println(MAX_VALUE);
    }
    
    *******    *******    *******    *******    *******    *******    *******    
